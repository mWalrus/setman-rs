extern crate clap;

use clap::{App, Arg, ArgMatches};

pub fn parse_args() -> ArgMatches<'static> {
    App::new("Setman - Application settings manager")
        .version("0.1")
        .author("mWalrus")
        .about("Manages settings for various applications")
        .arg(Arg::with_name("install")
            .short("i")
            .long("install")
            .value_name("APPLICATION")
            .help("Installs settings")
            .required_unless_one(&["uninstall", "sync", "install_all", "uninstall_all", "sync_all", "new", "list"])
            .takes_value(true))
        .arg(Arg::with_name("uninstall")
            .short("u")
            .long("uninstall")
            .value_name("APPLICATION")
            .help("Uninstalls settings")
            .required_unless_one(&["install", "sync", "install_all", "uninstall_all", "sync_all", "new", "list"])
            .takes_value(true))
        .arg(Arg::with_name("sync")
            .short("s")
            .long("sync")
            .value_name("APPLICATION")
            .help("Synchronizes settings")
            .required_unless_one(&["install", "uninstall", "install_all", "uninstall_all", "sync_all", "new", "list"])
            .takes_value(true))
        .arg(Arg::with_name("install_all")
            .long("install-all")
            .help("Install all applications settings")
            .required_unless_one(&["install", "uninstall", "sync", "uninstall_all", "sync_all", "new", "list"])
            .takes_value(false))
        .arg(Arg::with_name("uninstall_all")
            .long("uninstall-all")
            .help("Uninstall all applications settings")
            .required_unless_one(&["install", "uninstall", "sync", "install_all", "sync_all", "new", "list"])
            .takes_value(false))
        .arg(Arg::with_name("sync_all")
            .long("sync-all")
            .help("Sync all applications settings")
            .required_unless_one(&["install", "uninstall", "sync", "install_all", "uninstall_all", "new", "list"])
            .takes_value(false))
        .arg(Arg::with_name("new")
            .short("n")
            .long("new")
            .help("Add a new application")
            .takes_value(false))
        .arg(Arg::with_name("list")
            .short("l")
            .long("list")
            .help("Lists all applications")
            .takes_value(false))
        .get_matches()
}
