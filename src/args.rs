extern crate clap;

use clap::{App, Arg, ArgMatches};

pub fn parse_args() -> ArgMatches<'static> {
   return App::new("Setman - Application settings manager")
        .version("0.1")
        .author("mWalrus")
        .about("Manages settings for various applications")
        .arg(Arg::with_name("install")
            .short("i")
            .long("install")
            .help("Installs settings")
            .required_unless_all(&["uninstall", "sync"])
            .takes_value(false))
        .arg(Arg::with_name("uninstall")
            .short("u")
            .long("uninstall")
            .help("Uninstalls settings")
            .required_unless_all(&["install", "sync"])
            .takes_value(false))
        .arg(Arg::with_name("sync")
            .short("s")
            .long("sync")
            .help("Synchronizes settings")
            .required_unless_all(&["uninstall", "install"])
            .takes_value(false))
        .arg(Arg::with_name("application")
            .short("a")
            .long("application")
            .value_name("APPLICATION")
            .help("Application which settings should be installed for")
            .takes_value(true)
            .required_unless("new"))
        .arg(Arg::with_name("new")
            .short("n")
            .long("new")
            .help("Add a new application"))
        .arg(Arg::with_name("config")
            .short("p")
            .long("path")
            .value_name("CONFIG_PATH")
            .help("Custom settings root path for specified application")
            .takes_value(true))
        .get_matches();
}
